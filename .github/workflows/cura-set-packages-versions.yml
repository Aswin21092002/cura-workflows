name: Freeze Cura packages version
run-name: Freeze Cura packages versionto ${{ inputs.version }}

on:
  workflow_dispatch:
    inputs:
      cura_version:
        description: 'Cura version number, e.g. 5.7.0, 5.7.2 or 5.8.0-beta.2'
        required: true
        type: string

      create_feature_branch:
        description: 'Indicates whether we should create the feature branch, or jusr use it'
        required: true
        type: boolean

  workflow_call:
    inputs:
      cura_version:
        required: true
        type: string

      create_feature_branch:
        required: true
        type: boolean

jobs:
  parse-version:
    name: Parse input version string
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.version_parser.outputs.major }}.${{ steps.version_parser.outputs.minor }}
    steps:
      - name: Parse version string
        id: version_parser
        uses: booxmedialtd/ws-action-parse-semver@v1.4.7
        with:
          input_string: ${{ inputs.cura_version }}

  freeze-packages-versions:
    name: Freeze packages versions
    runs-on: ubuntu-latest
    needs: [parse-version]
    strategy:
      matrix:
        repository: [Cura, Uranium, CuraEngine, cura-binary-data, fdm_materials]
        include:
          - main_branch: ${{ inputs.create_feature_branch && 'main' || needs.parse-version.outputs.branch_name }}
          - repository: Cura
            main_branch: ${{ inputs.create_feature_branch && 'CURA-10769_automate_release_action' || needs.parse-version.outputs.branch_name }}
          - repository: fdm_materials
            main_branch: ${{ inputs.create_feature_branch && 'master' || needs.parse-version.outputs.branch_name }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          repository: Ultimaker/${{ matrix.repository }}
          ref: ${{ matrix.main_branch }}
          token: ${{ secrets.CURA_AUTORELEASE_PAT }}

      - name: Update conan packages versions
        shell: python
        run: |
          import yaml

          with open("conandata.yml", "r") as file:
            yaml_data = yaml.safe_load(file)

          yaml_data['version'] = '${{ inputs.cura_version }}'

          if 'requirements' in yaml_data:
            dependencies = ['cura_resources', 'uranium', 'curaengine', 'cura_binary_data', 'fdm_materials']

            requirements_list = yaml_data['requirements']
            new_requirements_list = []

            for requirement in requirements_list:
              package_name = requirement.split('/')[0]
              if package_name in dependencies:
                new_requirements_list.append(f"{package_name}/${{ inputs.cura_version }}")
              else:
                new_requirements_list.append(requirement)

            yaml_data['requirements'] = new_requirements_list

          with open("conandata.yml", "w") as file:
            yaml.safe_dump(yaml_data, file)

      - name: Update resources conan package version
        if: ${{ matrix.repository == 'Cura' }}
        shell: python
        working-directory: resources
        run: |
          import yaml

          with open("conandata.yml", "r") as file:
            yaml_data = yaml.safe_load(file)

          yaml_data['version'] = '${{ inputs.cura_version }}'

          with open("conandata.yml", "w") as file:
            yaml.safe_dump(yaml_data, file)

      - name: Create branch and commit
        uses: stefanzweifel/git-auto-commit-action@v5.0.1
        with:
          commit_message: Set conan package version ${{ inputs.cura_version }}
          branch: ${{ needs.parse-version.outputs.branch_name }}
          create_branch: true
